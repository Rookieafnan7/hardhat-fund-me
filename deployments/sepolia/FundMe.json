{
  "address": "0x0cEC788c5AA2763716C1ea8af431529feb6B924c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd177ca222a14f20eef7543d339c6fd39fb2d164ad520d55f1ecac875900b6c74",
  "receipt": {
    "to": null,
    "from": "0x7f088C754ab1Ed0e612fF35cB2710faC58614C52",
    "contractAddress": "0x0cEC788c5AA2763716C1ea8af431529feb6B924c",
    "transactionIndex": 40,
    "gasUsed": "1114706",
    "logsBloom": "0x
    "blockHash": "0x6e7117d84af758ec2375cad1374727dfae4347fa760de9e66f036dd6317b5ddf",
    "transactionHash": "0xd177ca222a14f20eef7543d339c6fd39fb2d164ad520d55f1ecac875900b6c74",
    "logs": [],
    "blockNumber": 4905073,
    "cumulativeGasUsed": "6140010",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "c6c1c3ccde0c4ef79e6ee09d3e521dc1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"Implements pricefeeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Implements pricefeeds as our library \"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowdfunding\\n * @author Patrick Collins\\n * @notice This contract is to demo a sample funding contract\\n * @dev Implements pricefeeds as our library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    \\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev Implements pricefeeds as our library\\n     * \\n     */\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    \\n    \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n    function cheaperWithdraw() public onlyOwner{\\n        address[] memory funders = s_funders;\\n        for( uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    \\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x6ca5386ab49b569d5e916fb82b0744d09e7e887921ac0ca5105bc198fdf6a1b3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08cd043af6fb2dc9c1174c692908550daee96fb0783644da2622517e80522fda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013cd380380620013cd83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611261806200016c6000396000f3fe6080604052600436106100865760003560e01c80636b69a592116100595780636b69a59214610147578063741bef1a14610172578063b60d42881461019d578063be2693f0146101a7578063dba6335f146101be57610086565b80630d8e6e2c1461008b5780631bf6132d146100b65780633ccfd60b146100f357806354861af71461010a575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610b22565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610ba0565b610290565b6040516100ea9190610b22565b60405180910390f35b3480156100ff57600080fd5b506101086102a8565b005b34801561011657600080fd5b50610131600480360381019061012c9190610bf9565b6104ea565b60405161013e9190610c35565b60405180910390f35b34801561015357600080fd5b5061015c610529565b6040516101699190610b22565b60405180910390f35b34801561017e57600080fd5b50610187610536565b6040516101949190610caf565b60405180910390f35b6101a561055c565b005b3480156101b357600080fd5b506101bc610696565b005b3480156101ca57600080fd5b506101d3610960565b6040516101e09190610c35565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561025357600080fd5b505afa158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b9190610cdf565b905090565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103da5760006001828154811061035557610354610d0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d290610d6a565b915050610332565b50600067ffffffffffffffff8111156103f6576103f5610db3565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b506001908051906020019061043a929190610a62565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046190610e13565b60006040518083038185875af1925050503d806000811461049e576040519150601f19603f3d011682016040523d82523d6000602084013e6104a3565b606091505b50509050806104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90610e85565b60405180910390fd5b50565b600181815481106104fa57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061059b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098690919063ffffffff16565b10156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610ef1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062a9190610f11565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610757575b5050505050905060005b815181101561084f576000600182815481106107ca576107c9610d0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084790610d6a565b9150506107ab565b50600067ffffffffffffffff81111561086b5761086a610db3565b5b6040519080825280602002602001820160405280156108995781602001602082028036833780820191505090505b50600190805190602001906108af929190610a62565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108d690610e13565b60006040518083038185875af1925050503d8060008114610913576040519150601f19603f3d011682016040523d82523d6000602084013e610918565b606091505b505090508061095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390610e85565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610992836109c2565b90506000670de0b6b3a764000085836109ab9190610f67565b6109b59190610ff0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0b57600080fd5b505afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a439190611099565b5050509150506402540be40081610a5a9190611114565b915050919050565b828054828255906000526020600020908101928215610adb579160200282015b82811115610ada5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a82565b5b509050610ae89190610aec565b5090565b5b80821115610b05576000816000905550600101610aed565b5090565b6000819050919050565b610b1c81610b09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6d82610b42565b9050919050565b610b7d81610b62565b8114610b8857600080fd5b50565b600081359050610b9a81610b74565b92915050565b600060208284031215610bb657610bb5610b3d565b5b6000610bc484828501610b8b565b91505092915050565b610bd681610b09565b8114610be157600080fd5b50565b600081359050610bf381610bcd565b92915050565b600060208284031215610c0f57610c0e610b3d565b5b6000610c1d84828501610be4565b91505092915050565b610c2f81610b62565b82525050565b6000602082019050610c4a6000830184610c26565b92915050565b6000819050919050565b6000610c75610c70610c6b84610b42565b610c50565b610b42565b9050919050565b6000610c8782610c5a565b9050919050565b6000610c9982610c7c565b9050919050565b610ca981610c8e565b82525050565b6000602082019050610cc46000830184610ca0565b92915050565b600081519050610cd981610bcd565b92915050565b600060208284031215610cf557610cf4610b3d565b5b6000610d0384828501610cca565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7582610b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610da857610da7610d3b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dfd600083610de2565b9150610e0882610ded565b600082019050919050565b6000610e1e82610df0565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e6f600b83610e28565b9150610e7a82610e39565b602082019050919050565b60006020820190508181036000830152610e9e81610e62565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610edb601b83610e28565b9150610ee682610ea5565b602082019050919050565b60006020820190508181036000830152610f0a81610ece565b9050919050565b6000610f1c82610b09565b9150610f2783610b09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f5c57610f5b610d3b565b5b828201905092915050565b6000610f7282610b09565b9150610f7d83610b09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb657610fb5610d3b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ffb82610b09565b915061100683610b09565b92508261101657611015610fc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61104081611021565b811461104b57600080fd5b50565b60008151905061105d81611037565b92915050565b6000819050919050565b61107681611063565b811461108157600080fd5b50565b6000815190506110938161106d565b92915050565b600080600080600060a086880312156110b5576110b4610b3d565b5b60006110c38882890161104e565b95505060206110d488828901611084565b94505060406110e588828901610cca565b93505060606110f688828901610cca565b92505060806111078882890161104e565b9150509295509295909350565b600061111f82611063565b915061112a83611063565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561116957611168610d3b565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111a6576111a5610d3b565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111e3576111e2610d3b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112205761121f610d3b565b5b82820290509291505056fea2646970667358221220aaab792cfae39facec4e202fff9e712f447a49797227923a5755f2f4332ddfc464736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80636b69a592116100595780636b69a59214610147578063741bef1a14610172578063b60d42881461019d578063be2693f0146101a7578063dba6335f146101be57610086565b80630d8e6e2c1461008b5780631bf6132d146100b65780633ccfd60b146100f357806354861af71461010a575b600080fd5b34801561009757600080fd5b506100a06101e9565b6040516100ad9190610b22565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610ba0565b610290565b6040516100ea9190610b22565b60405180910390f35b3480156100ff57600080fd5b506101086102a8565b005b34801561011657600080fd5b50610131600480360381019061012c9190610bf9565b6104ea565b60405161013e9190610c35565b60405180910390f35b34801561015357600080fd5b5061015c610529565b6040516101699190610b22565b60405180910390f35b34801561017e57600080fd5b50610187610536565b6040516101949190610caf565b60405180910390f35b6101a561055c565b005b3480156101b357600080fd5b506101bc610696565b005b3480156101ca57600080fd5b506101d3610960565b6040516101e09190610c35565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561025357600080fd5b505afa158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b9190610cdf565b905090565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103da5760006001828154811061035557610354610d0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d290610d6a565b915050610332565b50600067ffffffffffffffff8111156103f6576103f5610db3565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b506001908051906020019061043a929190610a62565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046190610e13565b60006040518083038185875af1925050503d806000811461049e576040519150601f19603f3d011682016040523d82523d6000602084013e6104a3565b606091505b50509050806104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90610e85565b60405180910390fd5b50565b600181815481106104fa57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061059b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098690919063ffffffff16565b10156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610ef1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062a9190610f11565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610757575b5050505050905060005b815181101561084f576000600182815481106107ca576107c9610d0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084790610d6a565b9150506107ab565b50600067ffffffffffffffff81111561086b5761086a610db3565b5b6040519080825280602002602001820160405280156108995781602001602082028036833780820191505090505b50600190805190602001906108af929190610a62565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108d690610e13565b60006040518083038185875af1925050503d8060008114610913576040519150601f19603f3d011682016040523d82523d6000602084013e610918565b606091505b505090508061095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095390610e85565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610992836109c2565b90506000670de0b6b3a764000085836109ab9190610f67565b6109b59190610ff0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0b57600080fd5b505afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a439190611099565b5050509150506402540be40081610a5a9190611114565b915050919050565b828054828255906000526020600020908101928215610adb579160200282015b82811115610ada5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a82565b5b509050610ae89190610aec565b5090565b5b80821115610b05576000816000905550600101610aed565b5090565b6000819050919050565b610b1c81610b09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6d82610b42565b9050919050565b610b7d81610b62565b8114610b8857600080fd5b50565b600081359050610b9a81610b74565b92915050565b600060208284031215610bb657610bb5610b3d565b5b6000610bc484828501610b8b565b91505092915050565b610bd681610b09565b8114610be157600080fd5b50565b600081359050610bf381610bcd565b92915050565b600060208284031215610c0f57610c0e610b3d565b5b6000610c1d84828501610be4565b91505092915050565b610c2f81610b62565b82525050565b6000602082019050610c4a6000830184610c26565b92915050565b6000819050919050565b6000610c75610c70610c6b84610b42565b610c50565b610b42565b9050919050565b6000610c8782610c5a565b9050919050565b6000610c9982610c7c565b9050919050565b610ca981610c8e565b82525050565b6000602082019050610cc46000830184610ca0565b92915050565b600081519050610cd981610bcd565b92915050565b600060208284031215610cf557610cf4610b3d565b5b6000610d0384828501610cca565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7582610b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610da857610da7610d3b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dfd600083610de2565b9150610e0882610ded565b600082019050919050565b6000610e1e82610df0565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e6f600b83610e28565b9150610e7a82610e39565b602082019050919050565b60006020820190508181036000830152610e9e81610e62565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610edb601b83610e28565b9150610ee682610ea5565b602082019050919050565b60006020820190508181036000830152610f0a81610ece565b9050919050565b6000610f1c82610b09565b9150610f2783610b09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f5c57610f5b610d3b565b5b828201905092915050565b6000610f7282610b09565b9150610f7d83610b09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb657610fb5610d3b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ffb82610b09565b915061100683610b09565b92508261101657611015610fc1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61104081611021565b811461104b57600080fd5b50565b60008151905061105d81611037565b92915050565b6000819050919050565b61107681611063565b811461108157600080fd5b50565b6000815190506110938161106d565b92915050565b600080600080600060a086880312156110b5576110b4610b3d565b5b60006110c38882890161104e565b95505060206110d488828901611084565b94505060406110e588828901610cca565b93505060606110f688828901610cca565b92505060806111078882890161104e565b9150509295509295909350565b600061111f82611063565b915061112a83611063565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561116957611168610d3b565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111a6576111a5610d3b565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111e3576111e2610d3b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112205761121f610d3b565b5b82820290509291505056fea2646970667358221220aaab792cfae39facec4e202fff9e712f447a49797227923a5755f2f4332ddfc464736f6c63430008080033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "Implements pricefeeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Implements pricefeeds as our library "
      }
    },
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}